{
  "metadata": {
    "name": "Real Codebase Test Scenarios",
    "description": "Test scenarios using authentic project files for realistic BM25 performance testing",
    "version": "3.0",
    "created": "2025-09-29",
    "updated": "2025-09-29"
  },
  "instances": [
    {
      "instance_id": "bm25_search",
      "query": "BM25 sparse search ranking algorithm tokens corpus",
      "ground_truth_files": [
        "search/bm25_index.py"
      ],
      "ground_truth_content": "BM25 text search implementation with TF-IDF ranking",
      "metadata": {
        "difficulty": "medium",
        "scenario_type": "search_algorithm",
        "expected_token_savings": "85-95%",
        "expected_winner": "BM25",
        "description": "Keyword-heavy query matching BM25 implementation with exact terminology"
      }
    },
    {
      "instance_id": "embedding_generation",
      "query": "embedding model vector encode transformer",
      "ground_truth_files": [
        "embeddings/embedder.py"
      ],
      "ground_truth_content": "Neural embedding generation using transformer models",
      "metadata": {
        "difficulty": "medium",
        "scenario_type": "machine_learning",
        "expected_token_savings": "80-90%",
        "expected_winner": "HYBRID",
        "description": "Mixed query combining ML keywords with semantic meaning"
      }
    },
    {
      "instance_id": "code_parsing",
      "query": "parse syntax tree node language structure AST",
      "ground_truth_files": [
        "chunking/tree_sitter.py"
      ],
      "ground_truth_content": "Tree-sitter based code parsing and AST traversal",
      "metadata": {
        "difficulty": "medium",
        "scenario_type": "parsing",
        "expected_token_savings": "80-90%",
        "expected_winner": "BM25",
        "description": "Technical terminology for parsing and AST manipulation"
      }
    },
    {
      "instance_id": "mcp_server",
      "query": "MCP server tool protocol FastMCP client",
      "ground_truth_files": [
        "mcp_server/server.py"
      ],
      "ground_truth_content": "Model Context Protocol server implementation",
      "metadata": {
        "difficulty": "medium",
        "scenario_type": "server",
        "expected_token_savings": "75-85%",
        "expected_winner": "BM25",
        "description": "Protocol and server keywords with specific MCP terminology"
      }
    },
    {
      "instance_id": "vector_indexing",
      "query": "FAISS vector index database storage search",
      "ground_truth_files": [
        "search/indexer.py"
      ],
      "ground_truth_content": "FAISS-based vector indexing and storage",
      "metadata": {
        "difficulty": "medium",
        "scenario_type": "indexing",
        "expected_token_savings": "80-90%",
        "expected_winner": "BM25",
        "description": "Technical keywords for vector database operations"
      }
    },
    {
      "instance_id": "evaluation_metrics",
      "query": "evaluation metrics precision recall F1 score accuracy",
      "ground_truth_files": [
        "evaluation/base_evaluator.py"
      ],
      "ground_truth_content": "Base evaluation framework with performance metrics",
      "metadata": {
        "difficulty": "easy",
        "scenario_type": "evaluation",
        "expected_token_savings": "85-95%",
        "expected_winner": "BM25",
        "description": "Standard ML evaluation terminology with exact metric names"
      }
    },
    {
      "instance_id": "installation_verification",
      "query": "verify installation dependencies package system check",
      "ground_truth_files": [
        "scripts/verify_installation.py"
      ],
      "ground_truth_content": "System verification and dependency checking",
      "metadata": {
        "difficulty": "easy",
        "scenario_type": "system",
        "expected_token_savings": "80-90%",
        "expected_winner": "BM25",
        "description": "Installation and verification keywords"
      }
    }
  ]
}